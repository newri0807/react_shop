{"version":3,"sources":["data.js","Detail.js","Cart.js","App.js","reportWebVitals.js","index.js"],"names":["id","title","content","price","Info","props","className","재고","TabContent","useEffect","스위치변경","누른탭","connect","state","reducer","alert열렸니","reducer2","history","useHistory","useParams","찾은상품","shoes","find","상품","useState","alert","alert변경","타이머","setTimeout","clearTimeout","누른탭변경","스위치","src","width","onClick","dispatch","type","데이터","name","quan","push","goBack","Nav","variant","defaultActiveKey","Item","Link","eventKey","CSSTransition","in","classNames","timeout","Table","responsive","map","a","i","Card","App","Data","shoes변경","재고변경","Navbar","bg","expand","Brand","as","to","Toggle","Collapse","exact","path","Jumbotron","Button","axios","get","then","result","data","catch","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","초기값","store","createStore","combineReducers","액션","copy","몇번째있니","findIndex","같은값","copy2","filter","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.65144f94.chunk.js","sourcesContent":["export default [\n    {\n      id : 0,\n      title : \"White and Black\",\n      content : \"Born in France\",\n      price : 120000\n    },\n  \n    {\n      id : 1,\n      title : \"Red Knit\",\n      content : \"Born in Seoul\",\n      price : 110000\n    },\n  \n    {\n      id : 2,\n      title : \"Grey Yordan\",\n      content : \"Born in the States\",\n      price : 130000\n    }\n  ] ","\nimport React, { useState, useEffect } from 'react';\nimport { useHistory, useParams } from 'react-router-dom';\nimport './Detail.scss';\nimport { Nav } from 'react-bootstrap';\nimport { CSSTransition } from 'react-transition-group';\nimport { connect } from 'react-redux';\n\n\nfunction Detail(props) {\n\n    let history = useHistory();\n\n    let { id } = useParams();\n    let 찾은상품 = props.shoes.find(function (상품) { //find() 라는 ES6 신문법. Array 안에서 원하는 자료를 찾고싶을 때 사용\n        return 상품.id == id\n    });\n\n    let [alert, alert변경] = useState(true);\n    useEffect(() => {\n        let 타이머 = setTimeout(() => { alert변경(false) }, 2000);\n        return () => { clearTimeout(타이머) }\n    }, []);\n\n    let [누른탭, 누른탭변경] = useState(0);\n    let [스위치, 스위치변경] = useState(false);  // for animation switch && 누르지 않는이상 작동안해야 되니까 false로 기본값 셋!\n\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col-md-6\">\n                    <img src={'https://codingapple1.github.io/shop/shoes' + (찾은상품.id + 1) + '.jpg'} width=\"100%\" />\n                </div>\n                <div className=\"col-md-6 mt-4\">\n                    {\n                        alert === true\n                            ? (<div className=\"my-alert2\">\n                                <p>재고가 얼마 남지 않았습니다</p>\n                            </div>)\n                            : null\n                    }\n                    <h4 className=\"pt-5\">{찾은상품.title}</h4>\n                    <p>{찾은상품.content}</p>\n                    <p>{찾은상품.price}원</p>\n                    <button className=\"btn btn-danger\" \n                    onClick={()=>{ \n                        props.dispatch( {type : '항목추가', 데이터 : {id: 찾은상품.id, name : 찾은상품.title, quan : 1} }) \n                        history.push('/cart'); // 라우터 함수를 이용해서 페이지 이동을 강제, 새로고침 안됨\n                        }}>\n                        주문하기</button>  \n\n                    <span className=\"pr-1\"></span>\n                    <button onClick={() => { history.goBack() }} className=\"btn btn-primary\" >뒤로가기</button>\n                    <Info 재고={props.재고[0]}></Info>\n                </div>\n                <div>\n                    <Nav variant=\"tabs\" defaultActiveKey=\"link-0\">\n                        <Nav.Item>\n                            <Nav.Link eventKey=\"link-0\" onClick={() => { 스위치변경(false); 누른탭변경(0) }}>Active</Nav.Link>\n                        </Nav.Item>\n                        <Nav.Item>\n                            <Nav.Link eventKey=\"link-1\" onClick={() => { 스위치변경(false); 누른탭변경(1) }}>Option 2</Nav.Link>\n                        </Nav.Item>\n                    </Nav>\n\n                    <CSSTransition in={스위치} classNames=\"wow\" timeout={500}>\n                        <TabContent 누른탭={누른탭} 스위치변경={스위치변경}/>\n                    </CSSTransition>\n                </div>\n\n\n            </div>\n        </div>\n    )\n};\n\nfunction Info(props) {\n    return (\n        <p className=\"mt-3\">재고 : {props.재고}</p>\n    )\n}\n\nfunction TabContent(props) {\n\n    useEffect( ()=>{\n        props.스위치변경(true); //탭내용 컴포넌트가 로드될 때 true\n      });\n\n    if (props.누른탭 === 0) {\n        return <div><br />   내용0</div>\n    } else if (props.누른탭 === 1) {\n        return <div><br />내용1</div>\n    } else if (props.누른탭 === 2) {\n        return <div><br />내용2</div>\n    }\n}\n\n\nfunction state를props화(state) {\n    return{\n       state : state.reducer,\n       alert열렸니 : state.reducer2 //리듀서2에 있는거 가져오는법\n    }\n}\n\n\nexport default connect(state를props화)(Detail);","import React, { useState } from 'react';\nimport { Table } from 'react-bootstrap';\nimport { connect } from 'react-redux';\n\nfunction Cart(props) {\n  //const [deleteProduct, setDeleteProduct] = useState(props.state);\n\n\n  return (\n    <div>\n    \n      <Table responsive>\n        <tr>\n          <th>#</th>\n          <th>상품명</th>\n          <th>수량</th>\n          <th>변경</th>\n          <th>삭제</th>\n        </tr>\n        {props.state.map((a, i) => {\n          return (\n            <tr key={i}>\n              <td>{a.id}</td>\n              <td>{a.name}</td>\n              <td>{a.quan}</td>\n              <td>\n                <button className=\"btn btn-danger\" onClick={() => { props.dispatch({ type: '수량증가', 데이터: a.id }) }}> + </button>\n                <button className=\"btn btn-primary\" onClick={() => { props.dispatch({ type: '수량감소', 데이터: a.id }) }}> - </button>                      \n              </td>\n              <td>\n              <button className=\"btn btn-dark\" onClick={() => { props.dispatch({ type: '상품삭제', 데이터: a.id }) }}> x </button> \n              </td>  \n\n            </tr>\n          )\n        })}\n      </Table>\n\n\n      { props.alert열렸니 === true\n        ? (<div className=\"my-alert2\">\n          <p>지금 구매하시면 20% 할인</p>\n          <button onClick={() => { props.dispatch({ type: 'alert닫기' }) }}>닫기</button>\n        </div>)\n        : null\n      }\n    </div>\n  )\n}\n\nfunction state를props화(state) {\n  return {\n    state: state.reducer,\n    alert열렸니: state.reducer2 //리듀서2에 있는거 가져오는법\n  }\n}\n\n\nexport default connect(state를props화)(Cart);","import React, { useState } from 'react';\nimport { Navbar, Nav, Button, Jumbotron } from 'react-bootstrap';\nimport './App.css';\nimport Data from './data.js';\nimport { Link, Route, Switch, useHistory } from 'react-router-dom';\nimport Detail from './Detail.js';\nimport axios from 'axios'; //for ajax\nimport Cart from './Cart.js';\n\nfunction App() {\n\n  let [shoes, shoes변경] = useState(Data);\n  let [재고, 재고변경] = useState([10,11,12]);\n  // let history2 = useHistory();\n\n  // function handleClick() {\n  //   history2.push(\"/detail/:id\");\n  // }\n  return (\n    <div className=\"App\">\n      <Navbar bg=\"light\" expand=\"lg\">\n        <Navbar.Brand as={Link} to=\"/\">Shoe-Shop</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"ml-auto\">\n          <Nav.Link as={Link} to=\"/\"> Home </Nav.Link>\n         <Nav.Link as={Link} to=\"/Detail\"> Detail </Nav.Link>\n          </Nav>\n        </Navbar.Collapse>\n      </Navbar>\n\n      <Route  exact path=\"/\">\n        <Jumbotron className=\"background\">\n          <h1>Hello, world!</h1>\n          <p>\n            This is a simple hero unit, a simple jumbotron-style component for calling\n            extra attention to featured content or information.\n        </p>\n          <p>\n            <Button variant=\"primary\">Learn more</Button>\n          </p>\n        </Jumbotron>\n        <div className=\"container\">\n          <div className=\"row\">\n            {\n              shoes.map((a, i) => {\n                return <Card shoes={shoes[i]} i={i} />\n              })\n            }\n\n          </div>\n        </div>\n\n        <br/>\n      <button className=\"btn btn-primary\" onClick={() => {\n\n        axios.get('https://codingapple1.github.io/shop/data2.json')\n        .then((result)=>{   shoes변경([...shoes, ...result.data ])   })\n        .catch(()=>{ })\n\n      }}>더보기</button>\n      </Route>\n\n      <Route path=\"/detail/:id\">\n        <Detail shoes={shoes} 재고={재고} 재고변경={재고변경} />\n      </Route>\n\n      <Route path=\"/cart\">\n        <Cart></Cart>\n      </Route>\n\n\n\n    </div>\n  );\n}\n\nfunction Card(props) {\n  let history = useHistory();\n  return (// ⬅ how can i do data rendering\n    <div className=\"col-md-4\" onClick={ ()=>{ history.push('/detail/' + props.shoes.id) } }> \n      <img src={'https://codingapple1.github.io/shop/shoes' + (props.i + 1) + '.jpg'} width=\"100%\" /> \n      <h4>{props.shoes.title}</h4> \n      <p>{props.shoes.content} & {props.shoes.price}</p>\n    </div>\n\n  )\n\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, combineReducers } from 'redux';\nimport Data from './data.js';\n\n//let store = createStore(()=>{ return [{id : 0, name : '멋진신발', quan : 2}]  })\n\n// let 초기값 = [ \n//   {id : 0, name :'멋진신발', quan : 2},\n//   {id : 1, name :'멋진신발2', quan : 1},\n// ];\n\n\nlet 초기값 = [];\n\n\n\nfunction reducer(state = 초기값, 액션) {   // redux 수정은 미리 index에서 선언해야됨 !\n\n\n\n\n  if (액션.type === '항목추가') {\n\n    let copy = [...state];\n    let 몇번째있니 = copy.findIndex((a) => { return a.id === 액션.데이터.id });\n\n    if (몇번째있니 >= 0) {      \n      copy[몇번째있니].quan++\n      return copy\n    } else {\n      copy.push(액션.데이터)\n      return copy\n    }\n  } else if (액션.type === '수량증가') {\n\n    // let copy = [...state];\n    // copy[0].quan++;\n    // return copy\n\n    \n    // dispatch하실 때 props.dispatch({ type: ‘수량증가’, 데이터: a.id })\n    \n    // 이렇게 보내셨는데 그러면 리듀서안에서 데이터를 꺼내쓸 때\n    \n    // 액션.데이터만 하면 보낸 데이터가 나오기 때문입니다 액션.데이터.id말고요  ⬇⬇⬇⬇\n        \n    let copy = [...state];\n    let 같은값 = copy.findIndex((a) => { return a.id === 액션.데이터 });\n    copy[같은값].quan++;\n    return copy\n\n  } else if (액션.type === '수량감소') {\n\n    // let copy = [...state];\n    // copy[0].quan--;\n    // return copy\n\n    //액션.데이터.id 가 0이면 id가 0인 상품을 state array에서 찾아서 quan++해주세요\n    let copy = [...state];\n    let 같은값 = copy.findIndex((a) => { return a.id === 액션.데이터 });\n    copy[같은값].quan--;\n    return copy\n\n\n  }\n  else if (액션.type === '상품삭제') {\n    let copy = [...state];\n    let copy2 = copy.filter((a) => { return a.id !== 액션.데이터 }\n    );\n    return copy2\n\n  }\n\n\n  else {\n    return state\n  }\n\n\n}\n\n\nlet alert초기값 = true;\n\nfunction reducer2(state = alert초기값, 액션) {\n  if (액션.type === 'alert닫기') {\n    return false\n  } else {\n    return state\n  }\n}\n\nlet store = createStore(combineReducers({ reducer, reducer2 }))\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n"],"sourceRoot":""}